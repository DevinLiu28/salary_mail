name: Build Executable with Resources

on:
  push:
    tags:
      - 'v*'  # 版本标签触发
  workflow_dispatch:  # 手动触发选项

jobs:
  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller openpyxl  # 添加必要的包
        pip install -r requirements.txt
        
    - name: Generate PyInstaller spec file
      run: |
        pyi-makespec `
          --onefile `
          --windowed `
          --name MyApp `
          --add-data "../config/*.ini;config" `
          --add-data "../data/*;data" `
          --add-data "../resources/*;resources" `
          --hidden-import configparser `
          --hidden-import openpyxl `
          src/send_email.py
          
        # 调整生成的 spec 文件确保正确路径
        (Get-Content MyApp.spec).Replace("os.getcwd()", "os.path.join(os.path.dirname(sys.executable), '..')") | Set-Content MyApp.spec
        
    - name: Run PyInstaller
      run: |
        pyinstaller MyApp.spec
        
    - name: Create release bundle
      run: |
        # 创建发布目录结构
        mkdir release
        cp dist/MyApp.exe release/
        
        # 复制必要的资源文件（保持相对路径）
        mkdir release/config
        cp config/*.ini release/config/
        
        mkdir -p release/data
        cp data/* release/data/
        
        mkdir -p release/resources/images
        cp resources/images/* release/resources/images/
        
        # 创建压缩包
        Compress-Archive -Path release/* -DestinationPath MyApp_${{ github.ref_name }}.zip
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: MyApp-Windows-${{ github.ref_name }}
        path: |
          MyApp_${{ github.ref_name }}.zip
          dist/MyApp.exe
